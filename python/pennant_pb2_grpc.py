# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import pennant_pb2 as pennant__pb2


class PennantStub(object):
  """The flag value service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetFlagValue = channel.unary_unary(
        '/proto.Pennant/GetFlagValue',
        request_serializer=pennant__pb2.FlagRequest.SerializeToString,
        response_deserializer=pennant__pb2.FlagReply.FromString,
        )


class PennantServicer(object):
  """The flag value service definition.
  """

  def GetFlagValue(self, request, context):
    """Gets a value for a flag
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PennantServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetFlagValue': grpc.unary_unary_rpc_method_handler(
          servicer.GetFlagValue,
          request_deserializer=pennant__pb2.FlagRequest.FromString,
          response_serializer=pennant__pb2.FlagReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.Pennant', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
