# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pennant.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='pennant.proto',
  package='proto',
  syntax='proto3',
  serialized_pb=_b('\n\rpennant.proto\x12\x05proto\"\xdf\x01\n\x0b\x46lagRequest\x12\x0c\n\x04Name\x18\x01 \x01(\t\x12\x30\n\x07Strings\x18\x02 \x03(\x0b\x32\x1f.proto.FlagRequest.StringsEntry\x12\x30\n\x07Numbers\x18\x03 \x03(\x0b\x32\x1f.proto.FlagRequest.NumbersEntry\x1a.\n\x0cStringsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a.\n\x0cNumbersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01:\x02\x38\x01\",\n\tFlagReply\x12\x0e\n\x06Status\x18\x01 \x01(\x05\x12\x0f\n\x07\x45nabled\x18\x02 \x01(\x08\x32\x41\n\x07Pennant\x12\x36\n\x0cGetFlagValue\x12\x12.proto.FlagRequest\x1a\x10.proto.FlagReply\"\x00\x42&\n\x14io.pennant.flagcheckB\x0cPennantProtoP\x01\x62\x06proto3')
)




_FLAGREQUEST_STRINGSENTRY = _descriptor.Descriptor(
  name='StringsEntry',
  full_name='proto.FlagRequest.StringsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='proto.FlagRequest.StringsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='proto.FlagRequest.StringsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=154,
  serialized_end=200,
)

_FLAGREQUEST_NUMBERSENTRY = _descriptor.Descriptor(
  name='NumbersEntry',
  full_name='proto.FlagRequest.NumbersEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='proto.FlagRequest.NumbersEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='proto.FlagRequest.NumbersEntry.value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=202,
  serialized_end=248,
)

_FLAGREQUEST = _descriptor.Descriptor(
  name='FlagRequest',
  full_name='proto.FlagRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Name', full_name='proto.FlagRequest.Name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Strings', full_name='proto.FlagRequest.Strings', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Numbers', full_name='proto.FlagRequest.Numbers', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_FLAGREQUEST_STRINGSENTRY, _FLAGREQUEST_NUMBERSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=248,
)


_FLAGREPLY = _descriptor.Descriptor(
  name='FlagReply',
  full_name='proto.FlagReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Status', full_name='proto.FlagReply.Status', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Enabled', full_name='proto.FlagReply.Enabled', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=250,
  serialized_end=294,
)

_FLAGREQUEST_STRINGSENTRY.containing_type = _FLAGREQUEST
_FLAGREQUEST_NUMBERSENTRY.containing_type = _FLAGREQUEST
_FLAGREQUEST.fields_by_name['Strings'].message_type = _FLAGREQUEST_STRINGSENTRY
_FLAGREQUEST.fields_by_name['Numbers'].message_type = _FLAGREQUEST_NUMBERSENTRY
DESCRIPTOR.message_types_by_name['FlagRequest'] = _FLAGREQUEST
DESCRIPTOR.message_types_by_name['FlagReply'] = _FLAGREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FlagRequest = _reflection.GeneratedProtocolMessageType('FlagRequest', (_message.Message,), dict(

  StringsEntry = _reflection.GeneratedProtocolMessageType('StringsEntry', (_message.Message,), dict(
    DESCRIPTOR = _FLAGREQUEST_STRINGSENTRY,
    __module__ = 'pennant_pb2'
    # @@protoc_insertion_point(class_scope:proto.FlagRequest.StringsEntry)
    ))
  ,

  NumbersEntry = _reflection.GeneratedProtocolMessageType('NumbersEntry', (_message.Message,), dict(
    DESCRIPTOR = _FLAGREQUEST_NUMBERSENTRY,
    __module__ = 'pennant_pb2'
    # @@protoc_insertion_point(class_scope:proto.FlagRequest.NumbersEntry)
    ))
  ,
  DESCRIPTOR = _FLAGREQUEST,
  __module__ = 'pennant_pb2'
  # @@protoc_insertion_point(class_scope:proto.FlagRequest)
  ))
_sym_db.RegisterMessage(FlagRequest)
_sym_db.RegisterMessage(FlagRequest.StringsEntry)
_sym_db.RegisterMessage(FlagRequest.NumbersEntry)

FlagReply = _reflection.GeneratedProtocolMessageType('FlagReply', (_message.Message,), dict(
  DESCRIPTOR = _FLAGREPLY,
  __module__ = 'pennant_pb2'
  # @@protoc_insertion_point(class_scope:proto.FlagReply)
  ))
_sym_db.RegisterMessage(FlagReply)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\024io.pennant.flagcheckB\014PennantProtoP\001'))
_FLAGREQUEST_STRINGSENTRY.has_options = True
_FLAGREQUEST_STRINGSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_FLAGREQUEST_NUMBERSENTRY.has_options = True
_FLAGREQUEST_NUMBERSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
